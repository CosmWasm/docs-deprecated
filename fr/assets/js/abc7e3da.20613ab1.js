"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2266],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return p}});var s=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,o=function(e,t){if(null==e)return{};var n,s,o={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=s.createContext({}),l=function(e){var t=s.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=l(e.components);return s.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=l(n),p=o,f=d["".concat(c,".").concat(p)]||d[p]||u[p]||r;return n?s.createElement(f,a(a({ref:t},m),{},{components:n})):s.createElement(f,a({ref:t},m))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var l=2;l<r;l++)a[l]=n[l];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6419:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return r},metadata:function(){return i},toc:function(){return l}});var s=n(3117),o=(n(7294),n(3905));const r={sidebar_position:3},a="Les bases de Cosmos SDK et CosmWasm",i={unversionedId:"basics/cosmos-sdk-cw",id:"basics/cosmos-sdk-cw",title:"Les bases de Cosmos SDK et CosmWasm",description:"Le Cosmos SDK",source:"@site/i18n/fr/docusaurus-plugin-content-docs-dev-academy/current/basics/03-cosmos-sdk-cw.md",sourceDirName:"basics",slug:"/basics/cosmos-sdk-cw",permalink:"/fr/dev-academy/basics/cosmos-sdk-cw",draft:!1,editUrl:"https://crowdin.com/project/cosmwasm-docs/fr",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"devAcademy",previous:{title:"Infrastructure de la cha\xeene de blocs",permalink:"/fr/dev-academy/basics/infra"},next:{title:"Configuration de l'environnement",permalink:"/fr/dev-academy/basics/environment"}},c={},l=[{value:"Le Cosmos SDK",id:"cosmos-sdk",level:2},{value:"CosmWasm",id:"cosmwasm",level:2},{value:"How do the Cosmos SDK, CosmWasm, and Tendermint fit together?",id:"how-do-the-cosmos-sdk-cosmwasm-and-tendermint-fit-together",level:2}],m={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,s.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"les-bases-de-cosmos-sdk-et-cosmwasm"},"Les bases de Cosmos SDK et CosmWasm"),(0,o.kt)("h2",{id:"cosmos-sdk"},"Le Cosmos SDK"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"From ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/v0.44/intro/overview.html"},"Cosmos SDK docs"))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Qu'est-ce que le SDK ?\nLe Cosmos-SDK est un framework open-source permettant de construire des blockchains publiques de type PoS (Proof-of-Stake)\nmulti-actifs, comme le Cosmos Hub, ainsi que des blockchains de type PoA (Proof-Of-Authority) autoris\xe9es. Les blockchains construites avec\nle kit SDK Cosmos sont g\xe9n\xe9ralement appel\xe9es blockchains sp\xe9cifiques \xe0 une application (application-specific).\nL'objectif du SDK Cosmos est de permettre aux d\xe9veloppeurs de cr\xe9er facilement des blockchains personnalis\xe9es \xe0 partir de z\xe9ro, qui peuvent nativement\ninteragir avec d'autres blockchains. Nous envisageons le SDK comme un framework semblable \xe0 npm afin de construire des applications blockchain s\xe9curis\xe9es au-dessus de Tendermint. Les blockchains bas\xe9es sur un SDK sont construites \xe0 partir de modules composables, dont la plupart sont open source et facilement accessibles \xe0 tout d\xe9veloppeur. Tout le monde peut cr\xe9er un module pour le\nCosmos-SDK, et l'int\xe9gration de modules d\xe9j\xe0 construits est aussi simple que leur importation dans votre application blockchain.\nDe plus, le SDK Cosmos est un syst\xe8me bas\xe9 sur les capacit\xe9s, ce qui permet aux d\xe9veloppeurs de mieux raisonner sur la s\xe9curit\xe9\ndes interactions entre les modules.")),(0,o.kt)("p",null,"In short, Cosmos SDK is an easy-to-use blockchain framework that enables developers to build application-specific blockchains without delving into the implementation details of low-level blockchain infrastructure (e.g., Byzantine fault tolerance)."),(0,o.kt)("p",null,"You can read through Cosmos SDK documentation for more information:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/intro/"},"Cosmos SDK Intro")," gives a great introduction to the framework."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.cosmos.network/main/basics"},"Cosmos SDK Basics")," covers the basics of Cosmos SDK concepts that are required for developing on CosmWasm with minimal Cosmos SDK knowledge.")),(0,o.kt)("h2",{id:"cosmwasm"},"CosmWasm"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"CosmWasm est \xe9crit comme un module qui peut s'ins\xe9rer dans le SDK Cosmos. Cela signifie que toute personne qui construit actuellement une blockchain en utilisant le SDK Cosmos peut rapidement et facilement ajouter le support des smart contracts CosmWasm \xe0 sa cha\xeene, sans ajuster la logique existante. Nous fournissons \xe9galement un exemple de binaire de CosmWasm int\xe9gr\xe9 dans le binaire gaiad, appel\xe9 ",(0,o.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"wasmd"),", afin que vous puissiez lancer une nouvelle blockchain compatible avec les smart contracts, en utilisant des outils document\xe9s et test\xe9s et le m\xeame mod\xe8le de s\xe9curit\xe9 que le Cosmos Hub. :::")),(0,o.kt)("p",null,"En bref, CosmWasm est un module de contrat intelligent (smart contract) qui peut \xeatre utilis\xe9 avec Cosmos SDK. Il ex\xe9cute la machine virtuelle ",(0,o.kt)("a",{parentName:"p",href:"https://webassembly.org/"},"Web Assembly")," (ou Wasm), permettant aux d\xe9veloppeurs de cr\xe9er des contrats intelligents dans diff\xe9rents langages. Actuellement, il prend en charge les contrats intelligents \xe9crits en Rust."),(0,o.kt)("h2",{id:"how-do-the-cosmos-sdk-cosmwasm-and-tendermint-fit-together"},"How do the Cosmos SDK, CosmWasm, and Tendermint fit together?"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n                ^  +-------------------------------+  ^\n                |  |                               |  |\n                |  |  State-machine = Application  |  |\n                |  |                               |  |   Built with Cosmos SDK\n                |  |            ^      +           |  |\n                |  +----------- | ABCI | ----------+  v\n                |  |            +      v           |  ^\n                |  |                               |  |\nBlockchain Node |  |           Consensus           |  |\n                |  |                               |  |\n                |  +-------------------------------+  |   Tendermint Core\n                |  |                               |  |\n                |  |           Networking          |  |\n                |  |                               |  |\n                v  +-------------------------------+  v\n\n")),(0,o.kt)("p",null,"The Cosmos SDK is built on top of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.tendermint.com/"},"Tendermint Core"),', which handles the low-level infrastructure of maintaining a blockchain (e.g., transacting, consensus). Il interagit avec le Cosmos SDK via l\'ABCI, ou Application BlockChain Interface. Les n\u0153uds complets de la blockchain ex\xe9cutent toute cette "stack" de Cosmos SDK et Tendermint pour r\xe9pliquer la blockchain et valider les transactions.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n                                      +\n                                      |\n                                      |  Transaction relayed from the full-node's\n                                      |  Tendermint engine to the node's application\n                                      |  via DeliverTx\n                                      |\n                                      |\n                +---------------------v--------------------------+\n                |                 APPLICATION                    |\n                |                                                |\n                |     Using baseapp's methods: Decode the Tx,    |\n                |     extract and route the message(s)           |\n                |                                                |\n                +---------------------+--------------------------+\n                                      |\n                                      |\n                                      |\n                                      +---------------------------+\n                                                                  |\n                                                                  |\n                                                                  |  Message routed to\n                                                                  |  the correct module\n                                                                  |  to be processed\n                                                                  |\n                                                                  |\n+----------------+  +---------------+  +----------------+  +------v----------+\n|                |  |               |  |                |  |                 |\n|  AUTH MODULE   |  |  BANK MODULE  |  | STAKING MODULE |  |   CosmWasm      |\n|                |  |               |  |                |  |                 |\n|                |  |               |  |                |  | Executes smart  |\n|                |  |               |  |                |  | contract code   |\n|                |  |               |  |                |  |                 |\n+----------------+  +---------------+  +----------------+  +------+----------+\n                                                                  |\n                                                                  |\n                                                                  |\n                                                                  |\n                                       +--------------------------+\n                                       |\n                                       | Return result to Tendermint\n                                       | (0=Ok, 1=Err)\n                                       v\n\n\n")),(0,o.kt)("p",null,"Les transactions sont transmises de l'ABCI \xe0 l'application, qui les achemine \xe0 son tour vers des ",(0,o.kt)("em",{parentName:"p"},"modules")," charg\xe9s d'ex\xe9cuter la logique applicative. CosmWasm est un module qui ex\xe9cute la machine virtuelle WebAssembly."),(0,o.kt)("p",null,"Par rapport aux contrats intelligents CosmWasm, les modules natifs de Cosmos SDK sont l\xe9g\xe8rement plus rapides en raison de l'absence de virtualisation. Cependant, la virtualisation comporte ses avantages propres. Smart contracts can be swapped when the chain is running, whereas restarts are required for native modules. De plus, gr\xe2ce \xe0 la machine virtuelle flexible Wasm, les contrats CosmWasm peuvent \xeatre \xe9crits en Rust (et un jour d'autres langages \xe9galement)."))}u.isMDXComponent=!0}}]);