"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9285],{6267:t=>{t.exports=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/fr/docs","tagsPath":"/fr/docs/tags","isLast":true,"routePriority":-1,"contentPath":"/home/runner/work/docs/docs/docs","contentPathLocalized":"/home/runner/work/docs/docs/i18n/fr/docusaurus-plugin-content-docs/current","docs":[{"unversionedId":"actor-model/actor-in-blokchain","id":"actor-model/actor-in-blokchain","title":"Smart contract as an actor","description":"In previous chapters, we were talking about the actor model and how is it","source":"@site/docs/05-actor-model/03-actor-in-blokchain.md","sourceDirName":"05-actor-model","slug":"/actor-model/actor-in-blokchain","permalink":"/fr/docs/actor-model/actor-in-blokchain","draft":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Smart contract as an actor"},"sidebar":"defaultSidebar","previous":{"title":"Actors in blockchain","permalink":"/fr/docs/actor-model/actors-in-blockchain"},"next":{"title":"CosmWasm IDE Tutorial","permalink":"/fr/docs/tutorials/cosmwasm-ide"}},{"unversionedId":"actor-model/actors-in-blockchain","id":"actor-model/actors-in-blockchain","title":"Actors in blockchain","description":"Previously we were talking about actors mostly in the abstraction of any blockchain","source":"@site/docs/05-actor-model/02-actors-in-blockchain.md","sourceDirName":"05-actor-model","slug":"/actor-model/actors-in-blockchain","permalink":"/fr/docs/actor-model/actors-in-blockchain","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Actors in blockchain"},"sidebar":"defaultSidebar","previous":{"title":"Idea behind an Actor Model","permalink":"/fr/docs/actor-model/idea"},"next":{"title":"Smart contract as an actor","permalink":"/fr/docs/actor-model/actor-in-blokchain"}},{"unversionedId":"actor-model/idea","id":"actor-model/idea","title":"Idea behind an Actor Model","description":"The actor model is the solution to the problem of communication between smart","source":"@site/docs/05-actor-model/01-idea.md","sourceDirName":"05-actor-model","slug":"/actor-model/idea","permalink":"/fr/docs/actor-model/idea","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Idea behind an Actor Model"},"sidebar":"defaultSidebar","previous":{"title":"Integration","permalink":"/fr/docs/integration"},"next":{"title":"Actors in blockchain","permalink":"/fr/docs/actor-model/actors-in-blockchain"}},{"unversionedId":"architecture/actor","id":"architecture/actor","title":"Actor Model","description":"The actor model is a design pattern, used to build reliable, distributed","source":"@site/docs/03-architecture/02-actor.md","sourceDirName":"03-architecture","slug":"/architecture/actor","permalink":"/fr/docs/architecture/actor","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Actor Model","sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"What are Multi-Chain Contracts?","permalink":"/fr/docs/architecture/multichain"},"next":{"title":"Names and Addresses","permalink":"/fr/docs/architecture/addresses"}},{"unversionedId":"architecture/addresses","id":"architecture/addresses","title":"Names and Addresses","description":"Almost all blockchains use addresses to identify external actors via a hash of a public key, and many newer ones","source":"@site/docs/03-architecture/03-addresses.md","sourceDirName":"03-architecture","slug":"/architecture/addresses","permalink":"/fr/docs/architecture/addresses","draft":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Names and Addresses","sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Actor Model","permalink":"/fr/docs/architecture/actor"},"next":{"title":"Querying","permalink":"/fr/docs/architecture/query"}},{"unversionedId":"architecture/composition","id":"architecture/composition","title":"Contract Composition","description":"Given the Actor model of dispatching messages, and synchronous queries implemented in CosmWasm","source":"@site/docs/03-architecture/06-composition.md","sourceDirName":"03-architecture","slug":"/architecture/composition","permalink":"/fr/docs/architecture/composition","draft":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Contract Composition","sidebar_position":6},"sidebar":"defaultSidebar","previous":{"title":"Serialization","permalink":"/fr/docs/architecture/serialization"},"next":{"title":"Comparison with Solidity Contracts","permalink":"/fr/docs/architecture/smart-contracts"}},{"unversionedId":"architecture/multichain","id":"architecture/multichain","title":"What are Multi-Chain Contracts?","description":"CosmWasm is designed and built from the ground up to be a multi-chain solution for smart contracts. As it comes from the","source":"@site/docs/03-architecture/01-multichain.md","sourceDirName":"03-architecture","slug":"/architecture/multichain","permalink":"/fr/docs/architecture/multichain","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Next Steps","permalink":"/fr/docs/getting-started/next-steps"},"next":{"title":"Actor Model","permalink":"/fr/docs/architecture/actor"}},{"unversionedId":"architecture/query","id":"architecture/query","title":"Querying","description":"There are many cases where you want to view the state of a contract. Both as an external client (using the cli), but","source":"@site/docs/03-architecture/04-query.md","sourceDirName":"03-architecture","slug":"/architecture/query","permalink":"/fr/docs/architecture/query","draft":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Querying","sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Names and Addresses","permalink":"/fr/docs/architecture/addresses"},"next":{"title":"Serialization","permalink":"/fr/docs/architecture/serialization"}},{"unversionedId":"architecture/serialization","id":"architecture/serialization","title":"Serialization","description":"One of the driving forces in developing CosmWasm, besides security by design, was to include a very nice Developer UX.","source":"@site/docs/03-architecture/05-serialization.md","sourceDirName":"03-architecture","slug":"/architecture/serialization","permalink":"/fr/docs/architecture/serialization","draft":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Serialization","sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Querying","permalink":"/fr/docs/architecture/query"},"next":{"title":"Contract Composition","permalink":"/fr/docs/architecture/composition"}},{"unversionedId":"architecture/smart-contracts","id":"architecture/smart-contracts","title":"Comparison with Solidity Contracts","description":"First of all, the deploy-execute process consists of 3 steps rather than 2. While Ethereum was built around the concept","source":"@site/docs/03-architecture/07-smart-contracts.md","sourceDirName":"03-architecture","slug":"/architecture/smart-contracts","permalink":"/fr/docs/architecture/smart-contracts","draft":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"defaultSidebar","previous":{"title":"Contract Composition","permalink":"/fr/docs/architecture/composition"},"next":{"title":"Contract Semantics","permalink":"/fr/docs/smart-contracts/contract-semantics"}},{"unversionedId":"getting-started/compile-contract","id":"getting-started/compile-contract","title":"Downloading and Compiling a Contract","description":"In this section, we will download the code for a sample contract and compile it into a wasm binary executable.","source":"@site/docs/02-getting-started/04-compile-contract.md","sourceDirName":"02-getting-started","slug":"/getting-started/compile-contract","permalink":"/fr/docs/getting-started/compile-contract","draft":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Setting up Environment","permalink":"/fr/docs/getting-started/setting-env"},"next":{"title":"Deployment and Interaction","permalink":"/fr/docs/getting-started/interact-with-contract"}},{"unversionedId":"getting-started/installation","id":"getting-started/installation","title":"Installing Prerequisites","description":"In this section, we will set up our machine and install the prerequisites for developing, deploying and interacting with smart contracts on Cosmos SDK chains.","source":"@site/docs/02-getting-started/02-installation.md","sourceDirName":"02-getting-started","slug":"/getting-started/installation","permalink":"/fr/docs/getting-started/installation","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Your First Contract","permalink":"/fr/docs/getting-started/intro"},"next":{"title":"Setting up Environment","permalink":"/fr/docs/getting-started/setting-env"}},{"unversionedId":"getting-started/interact-with-contract","id":"getting-started/interact-with-contract","title":"Deployment and Interaction","description":"We have the wasm binary ready. Now it is time to deploy it to the testnet and start interacting. You can use the wasmd Go CLI or the CosmJS Node Console as you prefer.","source":"@site/docs/02-getting-started/05-interact-with-contract.md","sourceDirName":"02-getting-started","slug":"/getting-started/interact-with-contract","permalink":"/fr/docs/getting-started/interact-with-contract","draft":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Downloading and Compiling a Contract","permalink":"/fr/docs/getting-started/compile-contract"},"next":{"title":"Next Steps","permalink":"/fr/docs/getting-started/next-steps"}},{"unversionedId":"getting-started/intro","id":"getting-started/intro","title":"Your First Contract","description":"What follows within the Getting Started section is a tour of the fundamental aspects of CosmWasm Smart Contracts. Although having a basic understanding of Rust and Go would be helpful, the content is intended for all learners, no matter their experience. The goal is to provide easy-to-follow instructions and to offer firsthand experience for first-time users by going through a step-by-step guide covering the topics below:","source":"@site/docs/02-getting-started/01-intro.md","sourceDirName":"02-getting-started","slug":"/getting-started/intro","permalink":"/fr/docs/getting-started/intro","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"intro"},"sidebar":"defaultSidebar","previous":{"title":"Introduction","permalink":"/fr/docs/"},"next":{"title":"Installing Prerequisites","permalink":"/fr/docs/getting-started/installation"}},{"unversionedId":"getting-started/next-steps","id":"getting-started/next-steps","title":"Next Steps","description":"This is a very simple example for the name service contract we developed, but it should show you what is possible, limited only by the wasm code you upload and the json messages you send. The next step is the","source":"@site/docs/02-getting-started/06-next-steps.md","sourceDirName":"02-getting-started","slug":"/getting-started/next-steps","permalink":"/fr/docs/getting-started/next-steps","draft":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"defaultSidebar","previous":{"title":"Deployment and Interaction","permalink":"/fr/docs/getting-started/interact-with-contract"},"next":{"title":"What are Multi-Chain Contracts?","permalink":"/fr/docs/architecture/multichain"}},{"unversionedId":"getting-started/setting-env","id":"getting-started/setting-env","title":"Setting up Environment","description":"You need an environment to run contracts. You can either run your node locally or connect to an existing network. For easy testing, the Malaga testnet is live. You can use the testnet to deploy and run your contracts.","source":"@site/docs/02-getting-started/03-setting-env.md","sourceDirName":"02-getting-started","slug":"/getting-started/setting-env","permalink":"/fr/docs/getting-started/setting-env","draft":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Installing Prerequisites","permalink":"/fr/docs/getting-started/installation"},"next":{"title":"Downloading and Compiling a Contract","permalink":"/fr/docs/getting-started/compile-contract"}},{"unversionedId":"integration","id":"integration","title":"Integration","description":"If you want to use Wasm in your own app, here is how you can get this working","source":"@site/docs/02-integration.md","sourceDirName":".","slug":"/integration","permalink":"/fr/docs/integration","draft":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Sudo Execution","permalink":"/fr/docs/smart-contracts/sudo"},"next":{"title":"Idea behind an Actor Model","permalink":"/fr/docs/actor-model/idea"}},{"unversionedId":"intro","id":"intro","title":"Introduction","description":"What is CosmWasm?","source":"@site/docs/01-intro.md","sourceDirName":".","slug":"/","permalink":"/fr/docs/","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"intro","slug":"/","sidebar_position":1},"sidebar":"defaultSidebar","next":{"title":"Your First Contract","permalink":"/fr/docs/getting-started/intro"}},{"unversionedId":"smart-contracts/code-pinning","id":"smart-contracts/code-pinning","title":"Code Pinning","description":"Code Pinning mechanism allows codes to be pinned to the memory.","source":"@site/docs/04-smart-contracts/12-code-pinning.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/code-pinning","permalink":"/fr/docs/smart-contracts/code-pinning","draft":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"defaultSidebar","previous":{"title":"Migration","permalink":"/fr/docs/smart-contracts/migration"},"next":{"title":"Testing","permalink":"/fr/docs/smart-contracts/testing"}},{"unversionedId":"smart-contracts/compilation","id":"smart-contracts/compilation","title":"Compilation","description":"Before your contract can be used, it has to be compiled, and then stored on chain.","source":"@site/docs/04-smart-contracts/08-compilation.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/compilation","permalink":"/fr/docs/smart-contracts/compilation","draft":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"defaultSidebar","previous":{"title":"Math","permalink":"/fr/docs/smart-contracts/math"},"next":{"title":"Deployment","permalink":"/fr/docs/smart-contracts/deployment"}},{"unversionedId":"smart-contracts/contract-semantics","id":"smart-contracts/contract-semantics","title":"Contract Semantics","description":"This document aims to clarify the semantics of how a CosmWasm contract interacts","source":"@site/docs/04-smart-contracts/01-contract-semantics.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/contract-semantics","permalink":"/fr/docs/smart-contracts/contract-semantics","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Comparison with Solidity Contracts","permalink":"/fr/docs/architecture/smart-contracts"},"next":{"title":"Messages","permalink":"/fr/docs/smart-contracts/message/message"}},{"unversionedId":"smart-contracts/deployment","id":"smart-contracts/deployment","title":"Deployment","description":"When compiling is complete (it may take a while) cd into the artifacts directory. ls should show you binaries for","source":"@site/docs/04-smart-contracts/09-deployment.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/deployment","permalink":"/fr/docs/smart-contracts/deployment","draft":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"defaultSidebar","previous":{"title":"Compilation","permalink":"/fr/docs/smart-contracts/compilation"},"next":{"title":"Introduction","permalink":"/fr/docs/smart-contracts/frontend_app/introduction"}},{"unversionedId":"smart-contracts/entry-points","id":"smart-contracts/entry-points","title":"Entry points","description":"Entry points, or handlers are where messages or queries are handled by the contract.","source":"@site/docs/04-smart-contracts/04-entry-points.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/entry-points","permalink":"/fr/docs/smart-contracts/entry-points","draft":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Complex State and Maps","permalink":"/fr/docs/smart-contracts/state/complex-state"},"next":{"title":"Query","permalink":"/fr/docs/smart-contracts/query"}},{"unversionedId":"smart-contracts/events","id":"smart-contracts/events","title":"Events","description":"Most entry point functions return a type of Result.","source":"@site/docs/04-smart-contracts/06-events.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/events","permalink":"/fr/docs/smart-contracts/events","draft":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"defaultSidebar","previous":{"title":"Query","permalink":"/fr/docs/smart-contracts/query"},"next":{"title":"Math","permalink":"/fr/docs/smart-contracts/math"}},{"unversionedId":"smart-contracts/frontend_app/bootstrap-dapp","id":"smart-contracts/frontend_app/bootstrap-dapp","title":"Bootstrap dApp","description":"There are two approaches to bootstrap a new dApp: as a Lerna package in the monorepo or as a","source":"@site/docs/04-smart-contracts/10-frontend_app/04-bootstrap-dapp.md","sourceDirName":"04-smart-contracts/10-frontend_app","slug":"/smart-contracts/frontend_app/bootstrap-dapp","permalink":"/fr/docs/smart-contracts/frontend_app/bootstrap-dapp","draft":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Cosmic dApp design","permalink":"/fr/docs/smart-contracts/frontend_app/cosmicdapp-design"},"next":{"title":"Develop dApp","permalink":"/fr/docs/smart-contracts/frontend_app/dapp-development"}},{"unversionedId":"smart-contracts/frontend_app/cosmicdapp-design","id":"smart-contracts/frontend_app/cosmicdapp-design","title":"Cosmic dApp design","description":"The CosmWasm/dApps [Design] package provides two","source":"@site/docs/04-smart-contracts/10-frontend_app/03-cosmicdapp-design.md","sourceDirName":"04-smart-contracts/10-frontend_app","slug":"/smart-contracts/frontend_app/cosmicdapp-design","permalink":"/fr/docs/smart-contracts/frontend_app/cosmicdapp-design","draft":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Cosmic dApp logic","permalink":"/fr/docs/smart-contracts/frontend_app/cosmicdapp-logic"},"next":{"title":"Bootstrap dApp","permalink":"/fr/docs/smart-contracts/frontend_app/bootstrap-dapp"}},{"unversionedId":"smart-contracts/frontend_app/cosmicdapp-logic","id":"smart-contracts/frontend_app/cosmicdapp-logic","title":"Cosmic dApp logic","description":"The CosmWasm/dApps [Logic] package provides three","source":"@site/docs/04-smart-contracts/10-frontend_app/02-cosmicdapp-logic.md","sourceDirName":"04-smart-contracts/10-frontend_app","slug":"/smart-contracts/frontend_app/cosmicdapp-logic","permalink":"/fr/docs/smart-contracts/frontend_app/cosmicdapp-logic","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Introduction","permalink":"/fr/docs/smart-contracts/frontend_app/introduction"},"next":{"title":"Cosmic dApp design","permalink":"/fr/docs/smart-contracts/frontend_app/cosmicdapp-design"}},{"unversionedId":"smart-contracts/frontend_app/dapp-development","id":"smart-contracts/frontend_app/dapp-development","title":"Develop dApp","description":"To showcase the previously explained utilities, we\'ll create the balance checker dApp from the template.","source":"@site/docs/04-smart-contracts/10-frontend_app/05-dapp-development.md","sourceDirName":"04-smart-contracts/10-frontend_app","slug":"/smart-contracts/frontend_app/dapp-development","permalink":"/fr/docs/smart-contracts/frontend_app/dapp-development","draft":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Bootstrap dApp","permalink":"/fr/docs/smart-contracts/frontend_app/bootstrap-dapp"},"next":{"title":"Verifying Smart Contracts","permalink":"/fr/docs/smart-contracts/verify"}},{"unversionedId":"smart-contracts/frontend_app/introduction","id":"smart-contracts/frontend_app/introduction","title":"Introduction","description":"In this tutorial you will learn how to build a CosmJS based dApp. The example dApp","source":"@site/docs/04-smart-contracts/10-frontend_app/01-introduction.md","sourceDirName":"04-smart-contracts/10-frontend_app","slug":"/smart-contracts/frontend_app/introduction","permalink":"/fr/docs/smart-contracts/frontend_app/introduction","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Deployment","permalink":"/fr/docs/smart-contracts/deployment"},"next":{"title":"Cosmic dApp logic","permalink":"/fr/docs/smart-contracts/frontend_app/cosmicdapp-logic"}},{"unversionedId":"smart-contracts/math","id":"smart-contracts/math","title":"Math","description":"The math functions used by cosmwasm are based upon standard rust, but helper functions are provided for u128, u64 and","source":"@site/docs/04-smart-contracts/07-math.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/math","permalink":"/fr/docs/smart-contracts/math","draft":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"defaultSidebar","previous":{"title":"Events","permalink":"/fr/docs/smart-contracts/events"},"next":{"title":"Compilation","permalink":"/fr/docs/smart-contracts/compilation"}},{"unversionedId":"smart-contracts/message/message","id":"smart-contracts/message/message","title":"Messages","description":"Messages are how you interact with a CosmWasm smart contract. If you look inside most contracts, there will be a","source":"@site/docs/04-smart-contracts/02-message/01-message.md","sourceDirName":"04-smart-contracts/02-message","slug":"/smart-contracts/message/message","permalink":"/fr/docs/smart-contracts/message/message","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Contract Semantics","permalink":"/fr/docs/smart-contracts/contract-semantics"},"next":{"title":"Submessages","permalink":"/fr/docs/smart-contracts/message/submessage"}},{"unversionedId":"smart-contracts/message/submessage","id":"smart-contracts/message/submessage","title":"Submessages","description":"Messages are used to interact with SDK modules or other CW smart contracts. Since messages are executed in a set-and-forget manner, you will not get a response on whether the call was successful or not. Getting the result of your call can be very useful in the following cases:","source":"@site/docs/04-smart-contracts/02-message/02-submessage.md","sourceDirName":"04-smart-contracts/02-message","slug":"/smart-contracts/message/submessage","permalink":"/fr/docs/smart-contracts/message/submessage","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Messages","permalink":"/fr/docs/smart-contracts/message/message"},"next":{"title":"Result and Option","permalink":"/fr/docs/smart-contracts/result-option"}},{"unversionedId":"smart-contracts/migration","id":"smart-contracts/migration","title":"Migration","description":"Migration is the process through which a given smart contracts code can be swapped out or \'upgraded\'.","source":"@site/docs/04-smart-contracts/11-migration.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/migration","permalink":"/fr/docs/smart-contracts/migration","draft":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"defaultSidebar","previous":{"title":"Verifying Smart Contracts","permalink":"/fr/docs/smart-contracts/verify"},"next":{"title":"Code Pinning","permalink":"/fr/docs/smart-contracts/code-pinning"}},{"unversionedId":"smart-contracts/query","id":"smart-contracts/query","title":"Query","description":"Querying is the other half of the coin to messages. You can think of queries as a database read, or a way of querying","source":"@site/docs/04-smart-contracts/05-query.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/query","permalink":"/fr/docs/smart-contracts/query","draft":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"defaultSidebar","previous":{"title":"Entry points","permalink":"/fr/docs/smart-contracts/entry-points"},"next":{"title":"Events","permalink":"/fr/docs/smart-contracts/events"}},{"unversionedId":"smart-contracts/result-option","id":"smart-contracts/result-option","title":"Result and Option","description":"In Rust, using Result and Option types is very common. If you\'ve used fp-ts in Typescript, functional features in","source":"@site/docs/04-smart-contracts/03-result-option.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/result-option","permalink":"/fr/docs/smart-contracts/result-option","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Submessages","permalink":"/fr/docs/smart-contracts/message/submessage"},"next":{"title":"cw-storage-plus","permalink":"/fr/docs/smart-contracts/state/cw-plus"}},{"unversionedId":"smart-contracts/state/complex-state","id":"smart-contracts/state/complex-state","title":"Complex State and Maps","description":"Of course, for most non-trivial examples, additional data will need to be stored. You can serialise larger JSON data","source":"@site/docs/04-smart-contracts/03-state/03-complex-state.md","sourceDirName":"04-smart-contracts/03-state","slug":"/smart-contracts/state/complex-state","permalink":"/fr/docs/smart-contracts/state/complex-state","draft":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Simple State","permalink":"/fr/docs/smart-contracts/state/simple-state"},"next":{"title":"Entry points","permalink":"/fr/docs/smart-contracts/entry-points"}},{"unversionedId":"smart-contracts/state/cw-plus","id":"smart-contracts/state/cw-plus","title":"cw-storage-plus","description":"Enhanced Storage Engines for CosmWasm","source":"@site/docs/04-smart-contracts/03-state/01-cw-plus.md","sourceDirName":"04-smart-contracts/03-state","slug":"/smart-contracts/state/cw-plus","permalink":"/fr/docs/smart-contracts/state/cw-plus","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Result and Option","permalink":"/fr/docs/smart-contracts/result-option"},"next":{"title":"Simple State","permalink":"/fr/docs/smart-contracts/state/simple-state"}},{"unversionedId":"smart-contracts/state/simple-state","id":"smart-contracts/state/simple-state","title":"Simple State","description":"State is where the smart contract works with saving and retrieving data. You can think of it much like a database","source":"@site/docs/04-smart-contracts/03-state/02-simple-state.md","sourceDirName":"04-smart-contracts/03-state","slug":"/smart-contracts/state/simple-state","permalink":"/fr/docs/smart-contracts/state/simple-state","draft":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"cw-storage-plus","permalink":"/fr/docs/smart-contracts/state/cw-plus"},"next":{"title":"Complex State and Maps","permalink":"/fr/docs/smart-contracts/state/complex-state"}},{"unversionedId":"smart-contracts/sudo","id":"smart-contracts/sudo","title":"Sudo Execution","description":"One of the wonders of the Cosmos SDK is governance.","source":"@site/docs/04-smart-contracts/14-sudo.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/sudo","permalink":"/fr/docs/smart-contracts/sudo","draft":false,"tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14},"sidebar":"defaultSidebar","previous":{"title":"Testing","permalink":"/fr/docs/smart-contracts/testing"},"next":{"title":"Integration","permalink":"/fr/docs/integration"}},{"unversionedId":"smart-contracts/testing","id":"smart-contracts/testing","title":"Testing","description":"At some point in Smart Contract development, everyone will arrive at tests. Tests are what give you and your protocol sleep at night and ensure changes can be rapidly deployed to the contracts codebase without breaking everything else.","source":"@site/docs/04-smart-contracts/13-testing.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/testing","permalink":"/fr/docs/smart-contracts/testing","draft":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"defaultSidebar","previous":{"title":"Code Pinning","permalink":"/fr/docs/smart-contracts/code-pinning"},"next":{"title":"Sudo Execution","permalink":"/fr/docs/smart-contracts/sudo"}},{"unversionedId":"smart-contracts/verify","id":"smart-contracts/verify","title":"Verifying Smart Contracts","description":"Smart Contract verification is an important process to ensure you are running the correct contract.","source":"@site/docs/04-smart-contracts/10-verify.md","sourceDirName":"04-smart-contracts","slug":"/smart-contracts/verify","permalink":"/fr/docs/smart-contracts/verify","draft":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"defaultSidebar","previous":{"title":"Develop dApp","permalink":"/fr/docs/smart-contracts/frontend_app/dapp-development"},"next":{"title":"Migration","permalink":"/fr/docs/smart-contracts/migration"}},{"unversionedId":"tutorials/cosmwasm-ide","id":"tutorials/cosmwasm-ide","title":"CosmWasm IDE Tutorial","description":"CosmosWasm IDE - An open-source project for CosmWasm smart contract developers. Powered by Oraichain & CosmWasm","source":"@site/docs/06-tutorials/01-cosmwasm-ide.md","sourceDirName":"06-tutorials","slug":"/tutorials/cosmwasm-ide","permalink":"/fr/docs/tutorials/cosmwasm-ide","draft":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"cosmwasm-ide"},"sidebar":"defaultSidebar","previous":{"title":"Smart contract as an actor","permalink":"/fr/docs/actor-model/actor-in-blokchain"}}],"drafts":[],"sidebars":{"defaultSidebar":[{"type":"doc","id":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":false,"items":[{"type":"doc","id":"getting-started/intro"},{"type":"doc","id":"getting-started/installation"},{"type":"doc","id":"getting-started/setting-env"},{"type":"doc","id":"getting-started/compile-contract"},{"type":"doc","id":"getting-started/interact-with-contract"},{"type":"doc","id":"getting-started/next-steps"}]},{"type":"category","label":"Architecture","collapsible":true,"collapsed":false,"items":[{"type":"doc","id":"architecture/multichain"},{"type":"doc","id":"architecture/actor"},{"type":"doc","id":"architecture/addresses"},{"type":"doc","id":"architecture/query"},{"type":"doc","id":"architecture/serialization"},{"type":"doc","id":"architecture/composition"},{"type":"doc","id":"architecture/smart-contracts"}]},{"type":"category","label":"Smart Contracts","collapsible":true,"collapsed":false,"items":[{"type":"doc","id":"smart-contracts/contract-semantics"},{"type":"category","label":"Message","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"smart-contracts/message/message"},{"type":"doc","id":"smart-contracts/message/submessage"}]},{"type":"doc","id":"smart-contracts/result-option"},{"type":"category","label":"State","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"smart-contracts/state/cw-plus"},{"type":"doc","id":"smart-contracts/state/simple-state"},{"type":"doc","id":"smart-contracts/state/complex-state"}]},{"type":"doc","id":"smart-contracts/entry-points"},{"type":"doc","id":"smart-contracts/query"},{"type":"doc","id":"smart-contracts/events"},{"type":"doc","id":"smart-contracts/math"},{"type":"doc","id":"smart-contracts/compilation"},{"type":"doc","id":"smart-contracts/deployment"},{"type":"category","label":"Frontend App","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"smart-contracts/frontend_app/introduction"},{"type":"doc","id":"smart-contracts/frontend_app/cosmicdapp-logic"},{"type":"doc","id":"smart-contracts/frontend_app/cosmicdapp-design"},{"type":"doc","id":"smart-contracts/frontend_app/bootstrap-dapp"},{"type":"doc","id":"smart-contracts/frontend_app/dapp-development"}]},{"type":"doc","id":"smart-contracts/verify"},{"type":"doc","id":"smart-contracts/migration"},{"type":"doc","id":"smart-contracts/code-pinning"},{"type":"doc","id":"smart-contracts/testing"},{"type":"doc","id":"smart-contracts/sudo"}]},{"type":"doc","id":"integration"},{"type":"category","label":"Actor model","collapsible":true,"collapsed":false,"items":[{"type":"doc","id":"actor-model/idea"},{"type":"doc","id":"actor-model/actors-in-blockchain"},{"type":"doc","id":"actor-model/actor-in-blokchain"}]},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":false,"items":[{"type":"doc","id":"tutorials/cosmwasm-ide"}]}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[],"blogListPaginated":[],"blogTags":{},"blogTagsListPath":"/fr/blog/tags","blogTagsPaginated":[]}},"docusaurus-plugin-content-pages":{"default":[{"type":"jsx","permalink":"/fr/chat","source":"@site/src/pages/chat.jsx"},{"type":"mdx","permalink":"/fr/deprecated","source":"@site/src/pages/deprecated.md","title":"Deprecated","description":"This CosmWasm documentation was not updated for a long time, and it got deprecated. Please refer to other sources:","frontMatter":{"title":"Deprecated","decscription":"Deprecation info"}}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-sitemap":{},"docusaurus-theme-classic":{},"docusaurus-theme-search-algolia":{},"docusaurus-plugin-sass":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}')}}]);