"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6194],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6255:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},s="Simple State",i={unversionedId:"smart-contracts/state/simple-state",id:"smart-contracts/state/simple-state",title:"Simple State",description:"State is where the smart contract works with saving and retrieving data. You can think of it much like a database",source:"@site/docs/04-smart-contracts/03-state/02-simple-state.md",sourceDirName:"04-smart-contracts/03-state",slug:"/smart-contracts/state/simple-state",permalink:"/fr/docs/smart-contracts/state/simple-state",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"cw-storage-plus",permalink:"/fr/docs/smart-contracts/state/cw-plus"},next:{title:"Complex State and Maps",permalink:"/fr/docs/smart-contracts/state/complex-state"}},c={},l=[],p={toc:l};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"simple-state"},"Simple State"),(0,a.kt)("p",null,"State is where the smart contract works with saving and retrieving data. You can think of it much like a database\ninteraction layer in a traditional application."),(0,a.kt)("p",null,"The most simple way of writing state is by writing a single item."),(0,a.kt)("p",null,"For example, in the ",(0,a.kt)("inlineCode",{parentName:"p"},"cw20-base")," contract, ",(0,a.kt)("inlineCode",{parentName:"p"},"TokenInfo")," is written when the contract is instantiated."),(0,a.kt)("p",null,"First, a ",(0,a.kt)("inlineCode",{parentName:"p"},"TokenInfo")," type is declared in ",(0,a.kt)("inlineCode",{parentName:"p"},"state.rs"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(Serialize, Deserialize, Clone, PartialEq, JsonSchema, Debug)]\n#[serde(rename_all = "snake_case")]\npub struct TokenInfo {\n  pub name: String,\n  pub symbol: String,\n  pub decimals: u8,\n  pub total_supply: Uint128,\n  pub mint: Option<MinterData>,\n}\n')),(0,a.kt)("p",null,"Then the storage is initialized:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'pub const TOKEN_INFO: Item<TokenInfo> = Item::new("token_info");\n')),(0,a.kt)("p",null,"In the contract, we see in the ",(0,a.kt)("inlineCode",{parentName:"p"},"instantiate")," function how data can be saved to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let data = TokenInfo {\nname: msg.name,\nsymbol: msg.symbol,\ndecimals: msg.decimals,\ntotal_supply,\nmint,\n};\nTOKEN_INFO.save(deps.storage, & data) ?;\n")),(0,a.kt)("p",null,"Here's the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-plus/blob/main/contracts/cw20-base/src/contract.rs#L90"},"code context"),"."))}m.isMDXComponent=!0}}]);