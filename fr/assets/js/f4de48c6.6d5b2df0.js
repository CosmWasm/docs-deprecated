"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2773],{3905:function(t,e,o){o.d(e,{Zo:function(){return p},kt:function(){return d}});var n=o(7294);function a(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function r(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function i(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?r(Object(o),!0).forEach((function(e){a(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function s(t,e){if(null==t)return{};var o,n,a=function(t,e){if(null==t)return{};var o,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)o=r[n],e.indexOf(o)>=0||(a[o]=t[o]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)o=r[n],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(a[o]=t[o])}return a}var c=n.createContext({}),l=function(t){var e=n.useContext(c),o=e;return t&&(o="function"==typeof t?t(e):i(i({},e),t)),o},p=function(t){var e=l(t.components);return n.createElement(c.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var o=t.components,a=t.mdxType,r=t.originalType,c=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),u=l(o),d=a,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||r;return o?n.createElement(h,i(i({ref:e},p),{},{components:o})):n.createElement(h,i({ref:e},p))}));function d(t,e){var o=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=o.length,i=new Array(r);i[0]=u;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var l=2;l<r;l++)i[l]=o[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},954:function(t,e,o){o.r(e),o.d(e,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return l}});var n=o(3117),a=(o(7294),o(3905));const r={sidebar_position:1,id:"cosmwasm-ide"},i="CosmWasm IDE Tutorial",s={unversionedId:"tutorials/cosmwasm-ide",id:"tutorials/cosmwasm-ide",title:"CosmWasm IDE Tutorial",description:"CosmosWasm IDE - An open-source project for CosmWasm smart contract developers. Powered by Oraichain & CosmWasm",source:"@site/docs/06-tutorials/01-cosmwasm-ide.md",sourceDirName:"06-tutorials",slug:"/tutorials/cosmwasm-ide",permalink:"/fr/docs/1.0/tutorials/cosmwasm-ide",draft:!1,editUrl:"https://github.com/InterWasm/docs/edit/main/docs/06-tutorials/01-cosmwasm-ide.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"cosmwasm-ide"},sidebar:"docsSidebar",previous:{title:"Smart contract as an actor",permalink:"/fr/docs/1.0/actor-model/actor-in-blokchain"}},c={},l=[{value:"Steps",id:"steps",level:2},{value:"1. Setting up the CosmWasm IDE development environment",id:"1-setting-up-the-cosmwasm-ide-development-environment",level:3},{value:"2. Create a smart contract project (optional).",id:"2-create-a-smart-contract-project-optional",level:3},{value:"3. Choose an arbitrary file in the project.",id:"3-choose-an-arbitrary-file-in-the-project",level:3},{value:"4. Use VSCode CosmWasm extension to build, deploy, and interact with the smart contract.",id:"4-use-vscode-cosmwasm-extension-to-build-deploy-and-interact-with-the-smart-contract",level:3},{value:"5. Interacting with the IDE webview",id:"5-interacting-with-the-ide-webview",level:3}],p={toc:l};function m(t){let{components:e,...o}=t;return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cosmwasm-ide-tutorial"},"CosmWasm IDE Tutorial"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/oraichain/vscode-cosmwasm/docs/contributing/public/cosmos-ide.png",alt:"CosmosWasm IDE - An open-source project for CosmWasm smart contract developers. Powered by Oraichain & CosmWasm"})),(0,a.kt)("h2",{id:"steps"},"Steps"),(0,a.kt)("h3",{id:"1-setting-up-the-cosmwasm-ide-development-environment"},"1. Setting up the CosmWasm IDE development environment"),(0,a.kt)("p",null,"To setup your workspace with all the neccessary tools & libraries for developing the CosmWasm smart contracts, please click button ",(0,a.kt)("inlineCode",{parentName:"p"},"Open in Gitpod")," below. Gitpod will automatically install everything you need to deploy a smart contract."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://gitpod.io/#https://github.com/oraichain/cosmwasm-gitpod"},(0,a.kt)("img",{parentName:"a",src:"https://gitpod.io/button/open-in-gitpod.svg",alt:"Open in Gitpod"}))),(0,a.kt)("h3",{id:"2-create-a-smart-contract-project-optional"},"2. Create a smart contract project (optional)."),(0,a.kt)("p",null,"After your workspace is ready, follow the next steps."),(0,a.kt)("p",null,"You can use the command below to get a CosmWasm scaffold project "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd package/ && git clone https://github.com/oraichain/oraiwasm_scaffold.git && cd -\n")),(0,a.kt)("h3",{id:"3-choose-an-arbitrary-file-in-the-project"},"3. Choose an arbitrary file in the project."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/oraichain/cosmwasm-gitpod/master/docs/assets/choose-a-file.png",alt:"Choose an arbitrary file"})),(0,a.kt)("h3",{id:"4-use-vscode-cosmwasm-extension-to-build-deploy-and-interact-with-the-smart-contract"},"4. Use VSCode CosmWasm extension to build, deploy, and interact with the smart contract."),(0,a.kt)("p",null,"The extension provides four custom VS Code buttons: ",(0,a.kt)("inlineCode",{parentName:"p"},"Build CosmWasm"),",  ",(0,a.kt)("inlineCode",{parentName:"p"},"Deploy CosmWasm"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Upload CosmWasm")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Instantiate CosmWasm")," under the status bar of Vs Code and a ",(0,a.kt)("inlineCode",{parentName:"p"},"CosmWasm IDE Explorer")," under the ",(0,a.kt)("inlineCode",{parentName:"p"},"Explorer")," tab of VS Code."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Build CosmWasm")," button will build the smart contract to the .wasm file based on the file you open in VS Code."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Deploy Cosmwasm")," button will deploy your contract onto a network that you choose on the CosmWasm IDE explorer."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Upload CosmWasm")," button will upload your smart contract code."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Instantiate CosmWasm")," button will instantiate your smart contract given a code id.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/oraichain/cosmwasm-gitpod/master/docs/assets/status-bar.png",alt:"VSCode's status bar"})),(0,a.kt)("p",null,"Please note that the IDE will read all the json schemas of a project from the location ",(0,a.kt)("inlineCode",{parentName:"p"},"${project_root_path}/artifacts/schema")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"${project_root_path}/schema"),". "),(0,a.kt)("p",null,"As a result, if the schemas are in a different location, the IDE will not be able to move to the next page."),(0,a.kt)("h3",{id:"5-interacting-with-the-ide-webview"},"5. Interacting with the IDE webview"),(0,a.kt)("p",null,"After deploying or instantiating, the webview will display the deployed contract address & two interaction options: Execute & Query. You can freely play with it to suit your needs."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/oraichain/cosmwasm-gitpod/master/docs/assets/interaction.png",alt:"Contract interaction"})))}m.isMDXComponent=!0}}]);