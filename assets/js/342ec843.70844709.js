"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9146],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),i=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=i(e.components);return a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=i(t),d=r,g=m["".concat(c,".").concat(d)]||m[d]||u[d]||s;return t?a.createElement(g,o(o({ref:n},p),{},{components:t})):a.createElement(g,o({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var i=2;i<s;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},795:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return i}});var a=t(3117),r=(t(7294),t(3905));const s={sidebar_position:5},o="Challenge",l={unversionedId:"basics/challenge",id:"basics/challenge",title:"Challenge",description:"Here is a basic challenge to test your might using the knowledge acquired in previous chapters.",source:"@site/dev-academy/basics/05-challenge.md",sourceDirName:"basics",slug:"/basics/challenge",permalink:"/dev-academy/basics/challenge",draft:!1,editUrl:"https://github.com/InterWasm/docs/edit/main/dev-academy/basics/05-challenge.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"devAcademy",previous:{title:"Environment Setup",permalink:"/dev-academy/basics/environment"},next:{title:"FAQ",permalink:"/dev-academy/basics/faq"}},c={},i=[{value:"Performing a transaction using CosmJS CLI",id:"performing-a-transaction-using-cosmjs-cli",level:2}],p={toc:i};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"challenge"},"Challenge"),(0,r.kt)("p",null,"Here is a basic challenge to test your might using the knowledge acquired in previous chapters."),(0,r.kt)("h2",{id:"performing-a-transaction-using-cosmjs-cli"},"Performing a transaction using CosmJS CLI"),(0,r.kt)("p",null,"Initialize the CosmJS interface session by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx @cosmjs/cli@^0.28.1 --init https://raw.githubusercontent.com/InterWasm/cw-plus-helpers/main/base.ts --init https://raw.githubusercontent.com/InterWasm/cw-plus-helpers/main/cw20-base.ts\n")),(0,r.kt)("p",null,"Import the necessary utilities."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Bip39, Random } from "@cosmjs/crypto";\nimport { StdFee } from "@cosmjs/stargate";\nimport { Secp256k1HdWallet, coins } from "@cosmjs/amino";\n')),(0,r.kt)("p",null,'The following lines of code will set up a client that speaks to the Malaga-420 testnet, generate an address and then request tokens from the faucet.\n"password" is the password of the key file.\nThis key is different from the wasmd key that was previously generated.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const [senderAddress, client] = await useOptions(malagaOptions).setup("password");\nclient.getAccount(senderAddress);\n')),(0,r.kt)("p",null,"The response should be something similar to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{\n  address: 'wasm1kfaqnxcsz6pwxyv0h468594g6g2drwxfrrwslv',\n  pubkey: null,\n  accountNumber: 326,\n  sequence: 0\n}\n")),(0,r.kt)("p",null,"Check to see if the wallet address has ",(0,r.kt)("inlineCode",{parentName:"p"},"umlg"),"s in it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'client.getBalance(senderAddress,"umlg");\n')),(0,r.kt)("p",null,"The response should be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{ denom: 'umlg', amount: '100000000' }\n")),(0,r.kt)("p",null,"Now, executing the following lines of code, create a recipient wallet address from a random mnemonic and observe that it has no ",(0,r.kt)("inlineCode",{parentName:"p"},"umlg"),"s initially."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const wallet = await Secp256k1HdWallet.fromMnemonic(Bip39.encode(Random.getBytes(24)).toString(),{prefix: "wasm"});\nconst [{ address: recipientAddress, pubkey }] = await wallet.getAccounts();\nconsole.info("Recipient Address:", recipientAddress);\nclient.getBalance(recipientAddress,"umlg");\n')),(0,r.kt)("p",null,"The response should be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{ denom: 'umlg', amount: '0' }\n")),(0,r.kt)("p",null,"Finally, a ",(0,r.kt)("em",{parentName:"p"},"send message")," can be formed piece-by-piece and broadcasted to perform the transaction as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const memo = "My very first tx!";\n\nconst msgSend = {fromAddress: senderAddress, toAddress: recipientAddress, amount: coins(10000000, "umlg"),};\n\nconst msgAny = {typeUrl: "/cosmos.bank.v1beta1.MsgSend", value: msgSend,};\n\nconst defaultFee: StdFee = { amount: [{amount: "1000000", denom: "umlg",},], gas: "89000",};\n\nconst broadcastResponse = await client.signAndBroadcast( senderAddress, [msgAny], defaultFee,  memo,);\n')),(0,r.kt)("p",null,"The transfer of funds should be complete and the recipient should have the amount of ",(0,r.kt)("inlineCode",{parentName:"p"},"umlg"),"s that was sent. Let us check the balances of both parties."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'client.getBalance(senderAddress,"umlg");\nclient.getBalance(recipientAddress,"umlg");\n')),(0,r.kt)("p",null,"The responses should be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{ denom: 'umlg', amount: '89000000' }\n{ denom: 'umlg', amount: '10000000' }\n")),(0,r.kt)("p",null,"The broadcast response can also be used to check if the transaction was successful. Run the following command and observe the output."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"console.info(broadcastResponse);\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"transactionHash")," can now be carried over to the ",(0,r.kt)("a",{parentName:"p",href:"https://block-explorer.malaga-420.cosmwasm.com/"},"Malaga Block Explorer")," in order to examine the transaction in detail."))}u.isMDXComponent=!0}}]);