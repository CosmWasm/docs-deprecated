"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6668],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),l=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},u=function(t){var e=l(t.components);return r.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,c(c({ref:e},u),{},{components:n})):r.createElement(f,c({ref:e},u))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4682:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l}});var r=n(3117),a=(n(7294),n(3905));const o={sidebar_position:1},c="What are Smart Contracts?",i={unversionedId:"smart-contract-interaction/what-is-smart-contracts",id:"smart-contract-interaction/what-is-smart-contracts",title:"What are Smart Contracts?",description:"A smart contract is a computer program or a transaction protocol which is intended to automatically execute, control",source:"@site/dev-academy/smart-contract-interaction/01-what-is-smart-contracts.md",sourceDirName:"smart-contract-interaction",slug:"/smart-contract-interaction/what-is-smart-contracts",permalink:"/dev-academy/smart-contract-interaction/what-is-smart-contracts",draft:!1,editUrl:"https://github.com/InterWasm/docs/edit/main/dev-academy/smart-contract-interaction/01-what-is-smart-contracts.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"devAcademy",previous:{title:"FAQ",permalink:"/dev-academy/basics/faq"},next:{title:"Basics of Smart Contract Interaction",permalink:"/dev-academy/smart-contract-interaction/interact"}},s={},l=[],u={toc:l};function p(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-are-smart-contracts"},"What are Smart Contracts?"),(0,a.kt)("admonition",{title:"Wikipedia",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"A smart contract is a computer program or a transaction protocol which is intended to automatically execute, control\nor document legally relevant events and actions according to the terms of a contract or an agreement.\nThe objectives of smart contracts are the reduction of need in trusted intermediators, arbitrations and enforcement\ncosts, fraud losses, as well as the reduction of malicious and accidental exceptions.")),(0,a.kt)("p",null,"In short, smart contracts are executable logic run on chain. Decentralized and on-chain execution makes the logic\nunstoppable, unbreakable and irreversible. This makes the execution trusted and the validity secured by means of cryptography."),(0,a.kt)("p",null,"Smart contracts can represent generalized logic ranging from financial applications to organisational structures."),(0,a.kt)("p",null,"Here is a great video explanation:"),(0,a.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/ZE2HxTmxfrI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,a.kt)("p",null,"This channel is a first stop for blockchain learners. It is highly recommended that you explore the rest of ",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=FkUn86bH34M&list=PLzvRQMJ9HDiQF_5bEErheiAawrJ-2zQoI"},"the playlist"),"."),(0,a.kt)("p",null,"In our context, CosmWasm is the framework that provides code and tooling to develop smart contracts and infrastructure to\nrun them on chain. For now smart contracts are written using Rust."),(0,a.kt)("p",null,"Here is a short code snippet exemplifying the smart contract execution logic to help understand the concept better."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'/// This logic is used to transfer tokens/coins from one account to another\npub fn execute_transfer(\n    deps: DepsMut,\n    _env: Env,\n    info: MessageInfo,\n    recipient: String,\n    amount: Uint128,\n) -> Result<Response, ContractError> {\n    // Amount validation\n    if amount == Uint128::zero() {\n        return Err(ContractError::InvalidZeroAmount {});\n    }\n\n    let rcpt_addr = deps.api.addr_validate(&recipient)?;\n\n    // Update the stored balances\n    BALANCES.update(\n        deps.storage,\n        &info.sender,\n        |balance: Option<Uint128>| -> StdResult<_> {\n            Ok(balance.unwrap_or_default().checked_sub(amount)?)\n        },\n    )?;\n    BALANCES.update(\n        deps.storage,\n        &rcpt_addr,\n        |balance: Option<Uint128>| -> StdResult<_> { Ok(balance.unwrap_or_default() + amount) },\n    )?;\n\n    // Returning a response back to indicate the execution is successful\n    let res = Response::new()\n        .add_attribute("action", "transfer")\n        .add_attribute("from", info.sender)\n        .add_attribute("to", recipient)\n        .add_attribute("amount", amount);\n    Ok(res)\n}\n')),(0,a.kt)("p",null,"As you can see smart contracts are not magic. They are very similar to any other programmed logic."),(0,a.kt)("p",null,"Differences from traditional back-end development are fundamental concepts from cryptography and other disciplines, such as:\n",(0,a.kt)("a",{parentName:"p",href:"https://www.investopedia.com/terms/h/hash.asp"},"hash"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://www.techslang.com/definition/what-is-a-blockchain-address/"},"address"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://www.investopedia.com/terms/m/merkle-root-cryptocurrency.asp"},"merkle root"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://www.wikiwand.com/en/Key%E2%80%93value_database"},"key-value database"),"."),(0,a.kt)("p",null,"Of course, there are other differences\u2014consensus, network security and message\npropagation to name a few. However, these are more advanced topics and will not be covered here."))}p.isMDXComponent=!0}}]);